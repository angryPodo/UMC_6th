openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for user management

paths:
  /user/signin:
    post:
      tags:
        - User
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 유저 이메일
                  example: example@mail.com
                name:
                  type: string
                  description: 유저 이름
                  example: 홍길동
                gender:
                  type: string
                  description: 유저 성별
                  enum: [male, female, other]
                  example: male
                age:
                  type: integer
                  description: 나이
                  example: 25
                address:
                  type: string
                  description: 주소
                  example: 서울시 강남구
                small_address:
                  type: string
                  description: 상세 주소
                  example: 강남대로 123길
                point:
                  type: integer
                  description: 포인트
                  example: 100
                prefer:
                  type: array
                  items:
                    type: integer
                  description: 선호 카테고리 번호
                  example: [1, 3, 5]
      responses:
        '200':
          description: 회원 가입 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: example@mail.com
                      name:
                        type: string
                        example: 홍길동
                      preferCategory:
                        type: array
                        items:
                          type: string
                        example: ["한식", "일식"]
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: COMMON001
                  message:
                    type: string
                    example: 잘못된 요청입니다
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: COMMON000
                  message:
                    type: string
                    example: 서버 에러, 관리자에게 문의 바랍니다
